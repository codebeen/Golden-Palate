@model User

@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/AppLayout.cshtml";
}

<div class="w-100 d-flex align-items-center justify-content-center">
    <div class="card w-50 p-4 shadow-lg">
        <h4 class="text-center">Change Password</h4>
        <p class="text-center text-muted mb-4">Please enter your current password and your new password.</p>

        <form id="form" method="post" asp-action="UpdatePassword" asp-controller="Account">
            <input type="hidden" asp-for="Id" />
            <div class="mb-3 text-start">
                <label for="newPassword" class="form-label">New Password <span class="text-danger">*</span></label>
                <div class="input-group">
                    <input type="password" class="form-control" id="newPassword" asp-for="Password" required>
                    <span class="input-group-text password-toggle">
                        <i class="fa fa-eye" id="toggleNewPassword"></i>
                    </span>
                </div>
                <div id="passwordError" class="text-danger small"></div>
            </div>

            <div class="mb-3 text-start">
                <label for="confirmPassword" class="form-label">Confirm New Password <span class="text-danger">*</span></label>
                <div class="input-group">
                    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                    <span class="input-group-text password-toggle">
                        <i class="fa fa-eye" id="toggleConfirmPassword"></i>
                    </span>
                </div>
                <div id="confirmError" class="text-danger small"></div>
            </div>

            <button type="submit" class="btn btn-primary rounded-pill w-75">Change Password</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("form");
        const newPassword = document.getElementById("newPassword");
        const confirmPassword = document.getElementById("confirmPassword");
        const passwordError = document.getElementById("passwordError");
        const confirmError = document.getElementById("confirmError");

        // Manually check password strength
        function isPasswordStrong(password) {
            let hasUpperCase = false;
            let hasLowerCase = false;
            let hasNumber = false;
            let hasSpecialChar = false;
            let specialChars = "!#$%^&*()_+[]{}|;:',.<>?/`~";

            if (password.length < 8) return false;

            for (let char of password) {
                if (!isNaN(char)) hasNumber = true;
                else if (char === char.toUpperCase() && char !== char.toLowerCase()) hasUpperCase = true;
                else if (char === char.toLowerCase() && char !== char.toUpperCase()) hasLowerCase = true;
                else if (specialChars.includes(char)) hasSpecialChar = true;
            }

            return hasUpperCase && hasLowerCase && hasNumber && hasSpecialChar;
        }

        // Validate password fields
        function validatePassword() {
            const passwordValue = newPassword.value.trim();
            const confirmValue = confirmPassword.value.trim();
            let isValid = true;

            if (!isPasswordStrong(passwordValue)) {
                passwordError.textContent = "Password must be at least 8 characters long, contain uppercase, lowercase, a number, and a special character.";
                newPassword.classList.add("border-danger");
                isValid = false;
            } else {
                passwordError.textContent = "";
                newPassword.classList.remove("border-danger");
            }

            if (confirmValue !== passwordValue) {
                confirmError.textContent = "Passwords do not match.";
                confirmPassword.classList.add("border-danger");
                isValid = false;
            } else {
                confirmError.textContent = "";
                confirmPassword.classList.remove("border-danger");
            }

            return isValid;
        }

        // Live validation
        newPassword.addEventListener("input", validatePassword);
        confirmPassword.addEventListener("input", validatePassword);

        // Form submission validation
        form.addEventListener("submit", function (e) {
            if (!validatePassword()) {
                e.preventDefault();
            }
        });

        // Password Toggle Functionality
        function togglePassword(inputId, toggleId) {
            const input = document.getElementById(inputId);
            const toggleIcon = document.getElementById(toggleId);

            toggleIcon.addEventListener("click", function () {
                input.type = input.type === "password" ? "text" : "password";
                toggleIcon.classList.toggle("fa-eye");
                toggleIcon.classList.toggle("fa-eye-slash");
            });
        }

        togglePassword("newPassword", "toggleNewPassword");
        togglePassword("confirmPassword", "toggleConfirmPassword");
    });
</script>

<!-- FontAwesome for eye icon -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
