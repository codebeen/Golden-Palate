@model RRS.Models.ViewModels.EditReservationViewModel

@{
    ViewData["Title"] = "Edit Reservation";
    Layout = "~/Views/Shared/_ReservationLayout.cshtml";
}

<div class="d-flex align-items-center w-100 position-relative">
    <div class="position-absolute start-0">
        <a href="javascript:history.back()" class="btn btn-outline-secondary">
            ← Back
        </a>
    </div>
    <div class="w-100 text-center">
        <h1>Edit Your Reservation Details</h1>
    </div>
</div>

<div class="text-center mb-2">
    <p class="text-secondary">Note: Only the reservation date and your personal details can be modified. If you wish to change your table or buffet selection, please cancel this reservation and create a new one.</p>
</div>

<form id="editReservationForm" class="gap-4" asp-action="UpdateReservation" asp-controller="CustomerReservation" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="ReservationDetails.Id" />
    <input type="hidden" asp-for="ReservationDetails.CustomerId" />
    <input type="hidden" asp-for="ReservationDetails.BuffetType" />
    <input type="hidden" asp-for="ReservationDetails.TotalPrice" />
    <input type="hidden" asp-for="ReservationDetails.TableNumber" />
    <div class="container bg-white shadow-sm rounded mt-2 p-4">
        <h5 class="text-left my-2">Table Details</h5>
        <div class="row">
            <div class="col-md-6 form-group">
                <label for="datepicker" class="form-label">Reservation Date <span class="text-danger">*</span></label>
                <input type="text" id="datepicker" class="form-control" asp-for="ReservationDetails.ReservationDate" />
            </div>
        </div>
        <hr class="text-secondary mb-2"/>
        <div class="row">
            <div class="col-md-6 form-group">
                <label class="form-label">Table Number</label>
                <p>@Model.ReservationDetails.TableNumber</p>
            </div>
            <div class="col-md-6 form-group">
                <label class="form-label">Total Price</label>
                <p>@Model.ReservationDetails.TotalPrice</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 form-group">
                <label class="form-label">Buffet Type</label>
                <p>@Model.ReservationDetails.BuffetType</p>
            </div>
            <div class="col-md-6 form-group">
                <label class="form-label">Table's Seating Capacity</label>
                <p>@Model.ReservationDetails.SeatingCapacity</p>
            </div>
        </div>
    </div>

    <div class="container bg-white shadow-sm rounded mt-2 p-4">
        <h5 class="text-left my-2">Personal Details</h5>
        <div class="row">
            <div class="col-md-6 form-group">
                <label for="firstName">First name <span class="text-danger">*</span></label>
                <input type="text" asp-for="ReservationDetails.FirstName" id="firstName" class="form-control" placeholder="ex. Juan" />
                <span asp-validation-for="ReservationDetails.FirstName" class="text-danger"></span>
                <span id="firstNameError" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-group">
                <label for="lastName">Last name <span class="text-danger">*</span></label>
                <input type="text" asp-for="ReservationDetails.LastName" id="lastName" class="form-control" placeholder="ex. Santos" />
                <span asp-validation-for="ReservationDetails.LastName" class="text-danger"></span>
                <span id="lastNameError" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 form-group">
                <label for="email">Email address <span class="text-danger">*</span></label>
                <input type="email" asp-for="ReservationDetails.Email" id="email" class="form-control" placeholder="ex. juansantos@email.com" />
                <span asp-validation-for="ReservationDetails.Email" class="text-danger"></span>
                <span id="emailError" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-group">
                <label for="phoneNumber">Phone Number <span class="text-danger">*</span></label>
                <input type="text" asp-for="ReservationDetails.PhoneNumber" id="phoneNumber" class="form-control" placeholder="ex. 09123456789" />
                <span asp-validation-for="ReservationDetails.PhoneNumber" class="text-danger"></span>
                <span id="phoneNumberError" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 form-group">
                <label for="specialRequest">Special Request</label>
                <textarea asp-for="ReservationDetails.SpecialRequest" id="specialRequest" class="form-control" rows="3" placeholder="Write your request here"></textarea>
                <span asp-validation-for="ReservationDetails.SpecialRequest" class="text-danger"></span>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary px-5 mt-3">Proceed</button>
</form>



@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>

        var reservedDates = @Html.Raw(Json.Serialize(Model.ReservedDates.Select(d => d.ToString("yyyy-MM-dd"))));

        flatpickr("#datepicker", {
            dateFormat: "Y-m-d",
            minDate: "today",
            disable: reservedDates,
        });


        document.getElementById("editReservationForm").addEventListener("submit", showTermsAndConditions);

        function showTermsAndConditions(e) {
            e.preventDefault(); // Prevent default form submission
            clearErrors(); // Clear existing error messages

            // Collect input values for validation
            const firstName = document.getElementById("firstName").value.trim();
            const lastName = document.getElementById("lastName").value.trim();
            const email = document.getElementById("email").value.trim();
            const phoneNumber = document.getElementById("phoneNumber").value.trim();

            let isValid = true;

            // Validate fields
            if (!firstName) {
                showError("firstNameError", "First name is required.");
                isValid = false;
            }
            if (!lastName) {
                showError("lastNameError", "Last name is required.");
                isValid = false;
            }
            if (!email) {
                showError("emailError", "Email address is required.");
                isValid = false;
            }
            if (!phoneNumber) {
                showError("phoneNumberError", "Phone number is required.");
                isValid = false;
            }

            if (isValid) {
                document.getElementById("editReservationForm").submit();
            }
        }



        // Function to display an error message
        function showError(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.textContent = message;
        }

        // Function to clear all error messages
        function clearErrors() {
            document.getElementById("firstNameError").textContent = "";
            document.getElementById("lastNameError").textContent = "";
            document.getElementById("emailError").textContent = "";
            document.getElementById("phoneNumberError").textContent = "";
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    Swal.fire({
                        title: 'Error!',
                    text: '@TempData["ErrorMessage"]',
                    icon: 'error',
                    confirmButtonText: 'OK'
                                            });
            </text>
        }
    </script>
}
