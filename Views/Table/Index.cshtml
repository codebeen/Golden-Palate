@model IEnumerable<RRS.Models.Table>

@{
    ViewData["Title"] = "Table Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int counter = 1;
}


<div class="text-left mb-2 d-flex align-items-center justify-content-between">
    <div>
        <h1 class="fs-4">Table Management</h1>
        <p class="text-secondary">List of all tables in the restaurant.</p>
    </div>
    <div class="gap-3">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTable">
            <i class="fa-solid fa-plus"></i>  Add Table
        </button>
        <button type="button" class="btn btn-warning" data-bs-toggle="" data-bs-target="">
            <i class="fa-solid fa-download"></i>  Export CSV
        </button>
    </div>
</div>

<!-- DataTales Example -->
<div class="card border-0 shadow-sm mb-5">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover text-center" id="tableTable">
                <thead>
                    <tr>
                        <th class="text-center">No.</th>
                        <th class="text-center">Table Number</th>
                        <th class="text-center">Description</th>
                        <th class="text-center">Seating Capacity</th>
                        <th class="text-center">Price</th>
                        <th class="text-center">Table Location</th>
                        <th class="text-center">Status</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var table in Model)
                    {
                        <tr>
                            <td class="text-center">@counter</td>
                            <td class="text-center">@table.TableNumber</td>
                            <td class="text-start">@table.Description</td>
                            <td class="text-center">@table.SeatingCapacity</td>
                            <td class="text-center">₱@table.Price</td>
                            <td class="text-center">@table.TableLocation</td>
                            <td class="text-center">
                                @if (table.Status == "Available")
                                {
                                    <span class="text-success">Available</span>
                                }
                                else if (table.Status == "Maintenance")
                                {
                                    <span class="text-danger">Maintenance</span>
                                }
                            </td>
                            <td class="align-middle text-center">
                                <div class="d-flex justify-content-center gap-3 flex-wrap w-100">
                                    <!-- Edit Button -->
                                    <div class="d-flex flex-column flex-sm-row ms-1">
                                        <button type="button" class="btn btn-outline-warning btn-sm rounded-pill px-2 py-1" data-bs-toggle="modal" data-bs-target="#editTable-@table.Id" data-url="@Url.Action($"Edit/{table.Id}")">
                                            <i class="fa-solid fa-pencil-alt"></i> <!-- Edit icon -->
                                        </button>
                                        @await Html.PartialAsync("EditTableModal", table)
                                    </div>

                                    <!-- Delete Button -->
                                    <div class="d-flex flex-column flex-sm-row mt-2 mt-sm-0 ms-1">
                                        <button type="button" class="btn btn-outline-danger btn-sm rounded-pill px-2 py-1" data-bs-toggle="modal" data-bs-target="#deleteTable-@table.Id" data-url="@Url.Action($"Delete/{table.Id}")">
                                            <i class="fa-solid fa-trash-alt"></i> <!-- Delete icon -->
                                        </button>
                                        @await Html.PartialAsync("DeleteTableModal", table)
                                    </div>
                                </div>
                            </td>
                        </tr>

                        counter++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modals -->
@await Html.PartialAsync("AddTableModal", new Table())

<!-- Scroll to Top Button -->
<a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
</a>

<style>
    #addEditHeader {
        border-bottom: none;
        padding: 1.5rem 1.5rem 0.5rem;
        background: linear-gradient(to right, #0062cc, #0096ff);
        color: white;
    }

    #modalHeader {
        border-bottom: none;
        padding: 1.5rem 1.5rem 0.5rem;
        background: linear-gradient(to right, #ff6b6b, #ff8787);
        border-radius: 1rem 1rem 0 0;
        color: white;
    }

    #deleteTableLabel {
        font-weight: 600;
        font-size: 1.25rem;
    }

    #deleteCloseButton {
        filter: brightness(0) invert(1);
        opacity: 0.8;
        transition: opacity 0.2s;
    }
</style>

<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


<script>

    @if (TempData["SuccessMessage"] != null)
    {
        <text>
                Swal.fire({
                    title: 'Success!',
                text: '@TempData["SuccessMessage"]',
                icon: 'success',
                confirmButtonText: 'OK'
                            });
        </text>
    }

    @if (TempData["InformationMessage"] != null)
    {
        <text>
                Swal.fire({
                    title: 'Information!',
                text: '@TempData["InformationMessage"]',
                icon: 'info',
                confirmButtonText: 'OK'
                            });
        </text>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <text>
                Swal.fire({
                    title: 'Error!',
                text: '@TempData["ErrorMessage"]',
                icon: 'error',
                confirmButtonText: 'OK'
                            });
        </text>
    }
</script>


@section Scripts {
    <script>
        $(document).ready(function () {
            new DataTable('#tableTable');
        });



        // document.addEventListener("DOMContentLoaded", function () {
        //     const toast = new bootstrap.Toast(document.getElementById("successNotification"));
        //     toast.show();
        //     const deleteButtons = document.querySelectorAll(".deleteTableButton");
        //     const tableNumberToDelete = document.getElementById("tableNumberToDelete");
        //     const confirmDeleteButton = document.getElementById("confirmDeleteButton");

        //     Attach click event to delete buttons
        //     deleteButtons.forEach(button => {
        //         button.addEventListener("click", function () {
        //             const tableId = this.getAttribute("data-table-id");
        //             const tableNumber = this.getAttribute("data-table-number");

        //             Update modal text
        //             tableNumberToDelete.textContent = tableNumber;

        //             Update confirmation link
        //             confirmDeleteButton.href = `/Table/DeleteTable/${tableId}`;
        //         });
        //     });
        // });
    </script>
}
